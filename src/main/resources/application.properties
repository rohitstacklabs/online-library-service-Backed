
spring.datasource.url=jdbc:postgresql://user-db:5432/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


server.port=8081


spring.redis.host=redis
spring.redis.port=6379
spring.redis.password=${REDIS_PASSWORD}
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false


jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}



management.endpoints.web.exposure.include=health,info


springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs


spring.web.resources.static-locations=file:uploads/
spring.mvc.static-path-pattern=/uploads/**


logging.level.org.springframework=DEBUG


spring.kafka.bootstrap-servers=kafka:9092


spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.online_library_service.dto,org.springframework.*
spring.kafka.consumer.group-id=membership-notification-group


kafka.topics.book-events=book.events
kafka.topics.membership-expired=membership.expired


spring.kafka.listener.concurrency=3

spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}




